[{"C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\index.tsx":"1","C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\reportWebVitals.ts":"2","C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\components\\App.tsx":"3","C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\components\\PlaceOrder.tsx":"4","C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\components\\OrdersView.tsx":"5","C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\components\\Header.tsx":"6","C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\components\\UserFunds.tsx":"7","C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\state\\orders.tsx":"8","C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\state\\UserFunds.tsx":"9","C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\api\\placeOrder.ts":"10","C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\api\\useUserId.ts":"11","C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\api\\addUserFunds.ts":"12","C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\api\\getOrders.ts":"13","C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\api\\getUserFunds.ts":"14","C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\components\\LoginButton.tsx":"15","C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\components\\OrderCard.tsx":"16","C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\api\\endpoint.ts":"17","C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\api\\deleteOrder.ts":"18","C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\components\\LogoutButton.tsx":"19"},{"size":873,"mtime":1614135539912,"results":"20","hashOfConfig":"21"},{"size":425,"mtime":1613352517732,"results":"22","hashOfConfig":"21"},{"size":2014,"mtime":1614140357939,"results":"23","hashOfConfig":"21"},{"size":3257,"mtime":1613443065268,"results":"24","hashOfConfig":"21"},{"size":572,"mtime":1613356383809,"results":"25","hashOfConfig":"21"},{"size":734,"mtime":1614139676052,"results":"26","hashOfConfig":"21"},{"size":685,"mtime":1613356268705,"results":"27","hashOfConfig":"21"},{"size":744,"mtime":1613352424502,"results":"28","hashOfConfig":"21"},{"size":814,"mtime":1613353044465,"results":"29","hashOfConfig":"21"},{"size":1796,"mtime":1613714355660,"results":"30","hashOfConfig":"21"},{"size":182,"mtime":1613714315284,"results":"31","hashOfConfig":"21"},{"size":1679,"mtime":1613714279849,"results":"32","hashOfConfig":"21"},{"size":1338,"mtime":1614136058611,"results":"33","hashOfConfig":"21"},{"size":1537,"mtime":1614140508340,"results":"34","hashOfConfig":"21"},{"size":327,"mtime":1614140502562,"results":"35","hashOfConfig":"21"},{"size":1071,"mtime":1613352463689,"results":"36","hashOfConfig":"21"},{"size":122,"mtime":1614139581961,"results":"37","hashOfConfig":"21"},{"size":1700,"mtime":1613714288772,"results":"38","hashOfConfig":"21"},{"size":332,"mtime":1614139952314,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"p031i9",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\index.tsx",[],["87","88"],"C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\reportWebVitals.ts",[],"C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\components\\App.tsx",["89","90","91"],"C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\components\\PlaceOrder.tsx",["92","93","94","95","96","97","98"],"import { useAuth0 } from '@auth0/auth0-react';\r\nimport { Button, Checkbox, FormControlLabel, Grid, TextField, Typography, colors, ThemeProvider, createMuiTheme, Card, CardContent } from '@material-ui/core';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { usePlaceOrder } from '../api/placeOrder';\r\nimport { useUserId } from '../api/useUserId';\r\nimport { OrderData } from '../interfaces/Order';\r\nimport { OrderContext } from '../state/orders';\r\n\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: colors.green,\r\n        secondary: colors.red\r\n    },\r\n});\r\n\r\nfunction parseIntNan(v: string) {\r\n    const n = parseInt(v);\r\n    \r\n    if (isNaN(n)) {\r\n        return undefined\r\n    } else {\r\n        return n;\r\n    }\r\n}\r\n\r\nexport function PlaceOrder() {\r\n    const placeOrder = usePlaceOrder();\r\n    const uid = useUserId();\r\n    const [state, setState] = React.useState<any>({ stock: 'VAS', price: 20, volume: 1});\r\n\r\n\r\n    const handleStockCode = (e: any) => setState({ ...state, stock: e.target.value })\r\n    const handlePrice = (e: any) => setState({ ...state, price: Number(e.target.value) })\r\n    const handleVolume = (e: any) => setState({ ...state, volume: parseIntNan(e.target.value) })\r\n\r\n    const buyOrder = () => {\r\n        if(state.stock && state.price && state.volume){\r\n            placeOrder({...state, isBuy:true, uid:uid});\r\n        }\r\n    }\r\n\r\n    const sellOrder = () => {\r\n        if(state.stock && state.price && state.volume){\r\n            placeOrder({...state, isBuy:false, uid:uid});\r\n        }\r\n    }\r\n    \r\n\r\n    console.log(state)\r\n\r\n\r\n    return <Card>\r\n        <CardContent>\r\n            <React.Fragment>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    Payment method\r\n                </Typography>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} md={4}>\r\n                        <TextField required label=\"Stock Code\" fullWidth onChange={handleStockCode} value={state.stock}/>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4}>\r\n                        <TextField required id=\"price\" label=\"Price\" fullWidth onChange={handlePrice} value={state.price} />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4}>\r\n                        <TextField\r\n                            type=\"number\"\r\n                            required\r\n                            id=\"volume\"\r\n                            label=\"Volume\"\r\n                            helperText=\"number of stocks\"\r\n                            fullWidth\r\n                            value={state.volume}\r\n                            onChange={handleVolume}\r\n                        />\r\n                    </Grid>\r\n                    <Grid justify='space-evenly' container>\r\n                        <ThemeProvider theme={theme}>\r\n                            <Button variant='contained' color=\"primary\" onClick={buyOrder}>Buy Order</Button>\r\n                            <Button variant='contained' color=\"secondary\" onClick={sellOrder}>Sell Order</Button>\r\n                        </ThemeProvider>\r\n                    </Grid>\r\n                </Grid>\r\n            </React.Fragment>\r\n        </CardContent>\r\n    </Card>\r\n\r\n\r\n}","C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\components\\OrdersView.tsx",["99","100"],"import React, { useContext } from \"react\";\r\nimport { OrderCard } from \"./OrderCard\";\r\nimport _ from 'lodash';\r\nimport { useOrders } from \"../api/getOrders\";\r\nimport { OrderContext } from \"../state/orders\";\r\n\r\nexport default function OrdersVeiw(){\r\n  const orderContext = useContext(OrderContext);\r\n  return <div>\r\n    <button onClick={()=>orderContext.refresh()} >Refresh</button>\r\n    <div>\r\n      {orderContext.orders.map(order => <OrderCard stock={order.stock} id={order.id} price={order.price} volume={order.volume} isBuy={order.isBuy}/> )}\r\n    </div>\r\n\r\n  </div>\r\n};","C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\components\\Header.tsx",["101","102","103"],"C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\components\\UserFunds.tsx",[],"C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\state\\orders.tsx",["104"],"import { useOrders } from '../api/getOrders';\r\nimport { placeOrder } from '../api/placeOrder';\r\nimport { Order } from '../interfaces/Order';\r\nimport {createContext} from 'react'\r\nimport { useContext } from 'react';\r\n\r\n\r\nclass Orders{\r\n    constructor(public orders: Order[] = [],\r\n        private refreshFunc? : ()=>void){}\r\n    \r\n    refresh(){\r\n        if(this.refreshFunc)\r\n            this.refreshFunc();\r\n    }\r\n}\r\n\r\n\r\nexport let OrderContext = createContext(new Orders());\r\n\r\nexport function OrderProvider(props:any){\r\n    const [orders, refresh] = useOrders();\r\n    \r\n    return <OrderContext.Provider {...props} value={new Orders(orders, refresh)} />;\r\n}\r\n\r\nexport function useOrdersContext(){\r\n    return useContext(OrderContext);\r\n}\r\n","C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\state\\UserFunds.tsx",[],"C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\api\\placeOrder.ts",["105","106","107","108","109"],"import { useAuth0 } from \"@auth0/auth0-react\";\r\nimport _ from \"lodash\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Order, OrderData } from \"../interfaces/Order\";\r\nimport { useOrdersContext } from \"../state/orders\";\r\nimport { useUserFundsContext } from '../state/UserFunds';\r\nimport { endpoint } from \"./endpoint\";\r\n\r\n\r\n\r\nexport async function placeOrder(accessToken:string, sub:string, order:OrderData){\r\n    try {\r\n        const uid = sub.replace(new RegExp(\".*\\\\|\"), \"\");          \r\n\r\n        const metadataResponse = await fetch(endpoint+\"/order?uid=\"+uid, {\r\n            headers: {\r\n                Authorization: `Bearer ${accessToken}`,\r\n            },\r\n            method: \"POST\",\r\n            body : JSON.stringify(order),\r\n        });\r\n\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n \r\n}\r\n\r\nexport function usePlaceOrder(){\r\n    const ordersState = useOrdersContext();\r\n    const useFundsContext = useUserFundsContext();\r\n    const [orders, setOrders] = useState<OrderData[]>([]);\r\n    const { user, isAuthenticated, getAccessTokenSilently } = useAuth0();\r\n\r\n    const deleteOrders = async ()=>{ \r\n        if(isAuthenticated){\r\n            const token = await getAccessTokenSilently();\r\n            const orderCopy = [...orders];\r\n            if(orders.length > 0)\r\n                setOrders([]);\r\n            const promises = orderCopy.map((order)=>placeOrder(token, user.sub, order))\r\n            await Promise.all(promises);\r\n\r\n            ordersState.refresh();\r\n            useFundsContext.refresh();\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(()=>{\r\n        deleteOrders();\r\n    }, [user, isAuthenticated, orders]);\r\n\r\n    const addPlaceOrder = (order:OrderData, )=>{ \r\n        setOrders([...orders, order]) \r\n    }\r\n\r\n    return addPlaceOrder;\r\n}\r\n","C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\api\\useUserId.ts",[],"C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\api\\addUserFunds.ts",["110","111","112","113","114","115"],"import { useAuth0 } from \"@auth0/auth0-react\";\r\nimport _ from \"lodash\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Order, OrderData } from \"../interfaces/Order\";\r\nimport { useOrdersContext } from \"../state/orders\";\r\nimport { useUserFundsContext } from '../state/UserFunds';\r\nimport { endpoint } from \"./endpoint\";\r\n\r\n\r\n\r\nexport async function addUserFunds(accessToken:string, sub:string, fund:number){\r\n    try {\r\n        const uid = sub.replace(new RegExp(\".*\\\\|\"), \"\");          \r\n\r\n        await fetch(endpoint+\"/addUserFunds?uid=\"+uid, {\r\n            headers: {\r\n                Authorization: `Bearer ${accessToken}`,\r\n            },\r\n            method: \"POST\",\r\n            body : JSON.stringify({money: fund}),\r\n        });\r\n\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n \r\n}\r\n\r\nexport function useAddUserFunds(){\r\n    const userFundsContext = useUserFundsContext();\r\n    const [funds, setFunds] = useState<number[]>([]);\r\n    const { user, isAuthenticated, getAccessTokenSilently } = useAuth0();\r\n\r\n    const addFunds = async ()=>{ \r\n        if(isAuthenticated){\r\n            const token = await getAccessTokenSilently();\r\n            const fundsCopy = [...funds];\r\n            if(fundsCopy.length > 0)\r\n                setFunds([]);\r\n            const promises = fundsCopy.map((fund)=>addUserFunds(token, user.sub, fund))\r\n            await Promise.all(promises);\r\n\r\n            userFundsContext.refresh();\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        addFunds();\r\n    }, [user, isAuthenticated, funds]);\r\n\r\n    const addFundsToQueue = (fund:number)=>{ \r\n        setFunds([...funds, fund]) \r\n    }\r\n\r\n    return addFundsToQueue;\r\n}\r\n","C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\api\\getOrders.ts",["116"],"import { useAuth0 } from \"@auth0/auth0-react\";\r\nimport _ from \"lodash\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Order } from \"../interfaces/Order\";\r\nimport { endpoint } from \"./endpoint\";\r\n\r\n\r\n\r\nexport async function getOrders(accessToken:string, sub:string){\r\n    try {\r\n        const uid = sub.replace(new RegExp(\".*\\\\|\"), \"\");          \r\n\r\n        const metadataResponse = await fetch(endpoint+\"/orders?uid=\"+uid, {\r\n            headers: {\r\n                Authorization: `Bearer ${accessToken}`,\r\n                \r\n                \r\n            },\r\n            method: \"GET\",\r\n        });\r\n\r\n        return await metadataResponse.json()\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n \r\n    return []\r\n}\r\n\r\nexport function useOrders() : [Order[], ()=>void]{\r\n    const [orders, setOrders] = useState<Order[]>([]);\r\n    const { user, isAuthenticated, getAccessTokenSilently } = useAuth0();\r\n\r\n    const loadOrders = async ()=>{ \r\n        if(isAuthenticated){\r\n            const token = await getAccessTokenSilently();\r\n            const loadedOrders = await getOrders(token, user.sub);\r\n            if(!_.isEqual(loadedOrders, orders))\r\n                setOrders(loadedOrders)\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        loadOrders();\r\n    }, [user, isAuthenticated]);\r\n\r\n    return [orders, loadOrders];\r\n\r\n}","C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\api\\getUserFunds.ts",["117","118"],"C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\components\\LoginButton.tsx",[],"C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\components\\OrderCard.tsx",["119","120"],"import React, { useContext } from \"react\";\r\nimport {Card, CardHeader, CardContent, Typography, IconButton} from \"@material-ui/core\"\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { useDeleteOrder } from \"../api/deleteOrder\";\r\nimport { OrderContext } from \"../state/orders\";\r\n\r\ninterface OrderProps {\r\n    id: number,\r\n    isBuy: boolean,\r\n    price: number,\r\n    volume: number,\r\n    stock: string\r\n}\r\n\r\n\r\ninterface OrderDeleteButtonProps{\r\n    orderId:number\r\n}\r\n\r\nfunction OrderDeleteButton({orderId} : OrderDeleteButtonProps){\r\n    const deleteOrder = useDeleteOrder();\r\n    \r\n    return <IconButton onClick={()=>{\r\n        deleteOrder(orderId);\r\n    }} > <DeleteIcon/></IconButton>\r\n}\r\n\r\nexport function OrderCard({ id, isBuy, price, volume, stock }: OrderProps) {\r\n\r\n    const title = (isBuy?\"Buy\":\"Sell\") + \" \" + stock;\r\n    return <Card>\r\n       \r\n        <CardContent>\r\n        <CardHeader title={title}  action={<OrderDeleteButton orderId={id}/>} />\r\n            <Typography>${price} x {volume}</Typography>\r\n        </CardContent>\r\n    </Card>\r\n};","C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\api\\endpoint.ts",[],"C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\api\\deleteOrder.ts",["121","122"],"import { useAuth0 } from \"@auth0/auth0-react\";\r\nimport _ from \"lodash\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useOrdersContext } from \"../state/orders\";\r\nimport { useUserFundsContext } from \"../state/UserFunds\";\r\nimport { endpoint } from \"./endpoint\";\r\n\r\n\r\n\r\nexport async function deleteOrder(accessToken:string, sub:string, orderid:number){\r\n    try {\r\n        const uid = sub.replace(new RegExp(\".*\\\\|\"), \"\");          \r\n\r\n        await fetch(endpoint+\"/order?uid=\"+uid+\"&orderid=\"+orderid, {\r\n            headers: {\r\n                Authorization: `Bearer ${accessToken}`,\r\n            },\r\n            method: \"DELETE\",\r\n        });\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n \r\n}\r\n\r\nexport function useDeleteOrder(){\r\n    const ordersState = useOrdersContext();\r\n    const useFundsContext = useUserFundsContext();\r\n\r\n    const [orderIds, setOrders] = useState<number[]>([]);\r\n    const { user, isAuthenticated, getAccessTokenSilently } = useAuth0();\r\n\r\n    const deleteOrders = async ()=>{ \r\n        if(isAuthenticated){\r\n            const token = await getAccessTokenSilently();\r\n            const orderCopy = [...orderIds];\r\n            if(orderIds.length > 0)\r\n                setOrders([]);\r\n            const promises = orderCopy.map((orderId)=>deleteOrder(token, user.sub, orderId))\r\n            await Promise.all(promises);\r\n           \r\n            ordersState.refresh();\r\n            useFundsContext.refresh();\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(()=>{\r\n        deleteOrders();\r\n    }, [user, isAuthenticated, orderIds]);\r\n\r\n    const addDeleteOrder = (orderId:number)=>{ \r\n        setOrders([...orderIds, orderId]) }\r\n\r\n    return addDeleteOrder;\r\n\r\n}","C:\\Users\\lhawk\\Stuff\\projects\\StockTrade\\stock-front-end\\src\\components\\LogoutButton.tsx",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":5,"column":56,"nodeType":"129","messageId":"130","endLine":5,"endColumn":61},{"ruleId":"127","severity":1,"message":"131","line":18,"column":11,"nodeType":"129","messageId":"130","endLine":18,"endColumn":15},{"ruleId":"127","severity":1,"message":"132","line":18,"column":34,"nodeType":"129","messageId":"130","endLine":18,"endColumn":56},{"ruleId":"127","severity":1,"message":"133","line":1,"column":10,"nodeType":"129","messageId":"130","endLine":1,"endColumn":18},{"ruleId":"127","severity":1,"message":"134","line":2,"column":18,"nodeType":"129","messageId":"130","endLine":2,"endColumn":26},{"ruleId":"127","severity":1,"message":"135","line":2,"column":28,"nodeType":"129","messageId":"130","endLine":2,"endColumn":44},{"ruleId":"127","severity":1,"message":"136","line":3,"column":17,"nodeType":"129","messageId":"130","endLine":3,"endColumn":27},{"ruleId":"127","severity":1,"message":"137","line":3,"column":29,"nodeType":"129","messageId":"130","endLine":3,"endColumn":38},{"ruleId":"127","severity":1,"message":"138","line":6,"column":10,"nodeType":"129","messageId":"130","endLine":6,"endColumn":19},{"ruleId":"127","severity":1,"message":"139","line":7,"column":10,"nodeType":"129","messageId":"130","endLine":7,"endColumn":22},{"ruleId":"127","severity":1,"message":"140","line":3,"column":8,"nodeType":"129","messageId":"130","endLine":3,"endColumn":9},{"ruleId":"127","severity":1,"message":"141","line":4,"column":10,"nodeType":"129","messageId":"130","endLine":4,"endColumn":19},{"ruleId":"127","severity":1,"message":"142","line":1,"column":18,"nodeType":"129","messageId":"130","endLine":1,"endColumn":24},{"ruleId":"127","severity":1,"message":"131","line":10,"column":13,"nodeType":"129","messageId":"130","endLine":10,"endColumn":17},{"ruleId":"127","severity":1,"message":"132","line":10,"column":36,"nodeType":"129","messageId":"130","endLine":10,"endColumn":58},{"ruleId":"127","severity":1,"message":"143","line":2,"column":10,"nodeType":"129","messageId":"130","endLine":2,"endColumn":20},{"ruleId":"127","severity":1,"message":"140","line":2,"column":8,"nodeType":"129","messageId":"130","endLine":2,"endColumn":9},{"ruleId":"127","severity":1,"message":"136","line":3,"column":10,"nodeType":"129","messageId":"130","endLine":3,"endColumn":20},{"ruleId":"127","severity":1,"message":"144","line":4,"column":10,"nodeType":"129","messageId":"130","endLine":4,"endColumn":15},{"ruleId":"127","severity":1,"message":"145","line":15,"column":15,"nodeType":"129","messageId":"130","endLine":15,"endColumn":31},{"ruleId":"146","severity":1,"message":"147","line":52,"column":8,"nodeType":"148","endLine":52,"endColumn":39,"suggestions":"149"},{"ruleId":"127","severity":1,"message":"140","line":2,"column":8,"nodeType":"129","messageId":"130","endLine":2,"endColumn":9},{"ruleId":"127","severity":1,"message":"136","line":3,"column":10,"nodeType":"129","messageId":"130","endLine":3,"endColumn":20},{"ruleId":"127","severity":1,"message":"144","line":4,"column":10,"nodeType":"129","messageId":"130","endLine":4,"endColumn":15},{"ruleId":"127","severity":1,"message":"138","line":4,"column":17,"nodeType":"129","messageId":"130","endLine":4,"endColumn":26},{"ruleId":"127","severity":1,"message":"150","line":5,"column":10,"nodeType":"129","messageId":"130","endLine":5,"endColumn":26},{"ruleId":"146","severity":1,"message":"151","line":49,"column":8,"nodeType":"148","endLine":49,"endColumn":38,"suggestions":"152"},{"ruleId":"146","severity":1,"message":"153","line":45,"column":8,"nodeType":"148","endLine":45,"endColumn":31,"suggestions":"154"},{"ruleId":"127","severity":1,"message":"140","line":2,"column":8,"nodeType":"129","messageId":"130","endLine":2,"endColumn":9},{"ruleId":"146","severity":1,"message":"155","line":50,"column":8,"nodeType":"148","endLine":50,"endColumn":31,"suggestions":"156"},{"ruleId":"127","severity":1,"message":"136","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":27},{"ruleId":"127","severity":1,"message":"139","line":5,"column":10,"nodeType":"129","messageId":"130","endLine":5,"endColumn":22},{"ruleId":"127","severity":1,"message":"140","line":2,"column":8,"nodeType":"129","messageId":"130","endLine":2,"endColumn":9},{"ruleId":"146","severity":1,"message":"147","line":50,"column":8,"nodeType":"148","endLine":50,"endColumn":41,"suggestions":"157"},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"@typescript-eslint/no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'getAccessTokenSilently' is assigned a value but never used.","'useAuth0' is defined but never used.","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'useContext' is defined but never used.","'useEffect' is defined but never used.","'OrderData' is defined but never used.","'OrderContext' is defined but never used.","'_' is defined but never used.","'useOrders' is defined but never used.","'Button' is defined but never used.","'placeOrder' is defined but never used.","'Order' is defined but never used.","'metadataResponse' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'deleteOrders'. Either include it or remove the dependency array.","ArrayExpression",["160"],"'useOrdersContext' is defined but never used.","React Hook useEffect has a missing dependency: 'addFunds'. Either include it or remove the dependency array.",["161"],"React Hook useEffect has a missing dependency: 'loadOrders'. Either include it or remove the dependency array.",["162"],"React Hook useEffect has a missing dependency: 'loadUserFunds'. Either include it or remove the dependency array.",["163"],["164"],"no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},"Update the dependencies array to be: [user, isAuthenticated, orders, deleteOrders]",{"range":"175","text":"176"},"Update the dependencies array to be: [user, isAuthenticated, funds, addFunds]",{"range":"177","text":"178"},"Update the dependencies array to be: [user, isAuthenticated, loadOrders]",{"range":"179","text":"180"},"Update the dependencies array to be: [user, isAuthenticated, loadUserFunds]",{"range":"181","text":"182"},"Update the dependencies array to be: [user, isAuthenticated, orderIds, deleteOrders]",{"range":"183","text":"184"},[1629,1660],"[user, isAuthenticated, orders, deleteOrders]",[1518,1548],"[user, isAuthenticated, funds, addFunds]",[1272,1295],"[user, isAuthenticated, loadOrders]",[1466,1489],"[user, isAuthenticated, loadUserFunds]",[1534,1567],"[user, isAuthenticated, orderIds, deleteOrders]"]